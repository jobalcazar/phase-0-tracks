Display the information in one table (either table is fine).
select * from users;

Update an item that meets some condition (you can choose a condition that makes sense).
update user set first_name="Juan" where id=1;

Display the information in both tables using one query.
select * from user,place_birth where user.birth_id=place_birth.id;

Display a narrower selection of columns (fewer columns than all of them, in other words)
from both tables using one query.
select user.first_name, user.last_name, place_birth.city, place_birth.state from user, place_birth where user.birth_id=place_birth.id;

Delete an item that meets some condition (you can choose a condition that makes sense).
delete from user where first_name="Fiona";

--release 3--
There are lots of different kinds of joins. What are they? Can you apply
different conditions to a join to change what's displayed? Can you bookmark any
good diagrams that will help you tell different joins apart in the future?
INNER JOIN: returns rows when there is a match in both tables.
LEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.
RIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.
FULL JOIN: returns rows when there is a match in one of the tables.
SELF JOIN: is used to join a table to itself as if the table were two tables, temporarily renaming at least one table in the SQL statement.
CARTESIAN JOIN: returns the Cartesian product of the sets of records from the two or more joined tables.

Try a few different joins in your database, and record the commands and
the output in queries.txt.
SELECT * FROM user JOIN place_birth ON user.birth_id = place_birth.id;
